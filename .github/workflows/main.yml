name: Build SEA

on:
  push:
    branches: [ "main" ]
    paths: 'src/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'development'
jobs:
    deploy:
      runs-on: ${{ matrix.runner }}
      strategy:
        fail-fast: false
        matrix:
          include:
          - runner: ubuntu-latest
            labels: Linux
            arch: ARM64
          #- runner: self-hosted
          #  labels: macOS
          #  arch: ARM64
          - runner: ubuntu-latest
            labels: Linux
            arch: x86_64
          - runner: windows-latest
      steps:
        - name: Checkout
          id: checkout
          uses: actions/checkout@v4
    
        - name: Setup Node.js
          id: setup-node
          uses: actions/setup-node@v4
          with:
            node-version: 21.7.0

        - name: Set up environment variables
          id: vars
          run: |
            echo "OS_NAME=${{ matrix.runner }}" >> $GITHUB_ENV
            unameOut="$(uname -m)"
            if [ "$unameOut" == "x86_64" ]; then
              echo "CPU_ARCH=amd64" >> $GITHUB_ENV
            elif [ "$unameOut" == "aarch64" ]; then
              echo "CPU_ARCH=arm64" >> $GITHUB_ENV
            else
              echo "CPU_ARCH=$unameOut" >> $GITHUB_ENV
            fi
          shell: bash
        - name: Find Node (UNIX)
          id: find-node-unix
          if: runner.os == 'Linux'
          run: |
            #echo "node=$(which node)" >> "$GitHub_OUTPUT"
            which node
            whereis node
        - name: Find Node (Windows)
          id: find-node-windows
          if: runner.os == 'Windows'
          run: |
            (Get-Command node).Source
        - name: SEA (Unix)
          id: sea-unix
          if: runner.os != 'Windows'
          uses: bryopsida/node-sea-action@v1
          with:
            working-dir: .
            output-dir: build
            executable-name: sea
            sea-config-path: sea-config.json
            node-path: /opt/hostedtoolcache/node/21.7.0/x64/bin/node
            
        - name: SEA (Windows)
          id: sea-windows
          if: runner.os == 'Windows'
          uses: bryopsida/node-sea-action@v1
          with:
            working-dir: .
            output-dir: build
            executable-name: sea
            sea-config-path: sea-config.json
            node-path: C:\hostedtoolcache\windows\node\21.7.0\x64\node.exe
    
        - uses: actions/upload-artifact@v4
          with:
            name: ${{ env.OS_NAME }}-${{ runner.arch }}-sea
            path: build/
            if-no-files-found: error
